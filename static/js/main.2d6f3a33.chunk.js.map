{"version":3,"sources":["assets/no-image.jpg","api/api.js","components/Slider/Slider.js","components/Header/Header.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getRandomInt","max","Math","floor","random","getListOfMovies","genre","year","Promise","resolve","reject","axios","method","url","then","response","data","results","catch","error","MovieGenres","id","name","ResultSlider","stateList","stateGenre","stateYear","useState","length","state","settings","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","autoplay","autoplaySpeed","responsive","breakpoint","className","src","poster_path","noImage","alt","title","onError","e","target","overview","map","item","key","original_title","vote_average","Header","getData","onClick","Footer","href","App","setstateList","setstateGenre","setstateYear","a","typeNo","yearNo","res","console","log","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2d6f3a33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.b81d2798.jpg\";","import axios from \"axios\";\n\nexport const getRandomInt = max => {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nexport const getListOfMovies = (genre, year) => {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: \"GET\",\n      url: `https://api.themoviedb.org/3/discover/movie?api_key=68d8f92e9499c170b8c35de553f3dda1&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&primary_release_year=${year}&with_genres=${genre}`\n    })\n      .then(response => {\n        resolve(response.data.results);\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\nexport const MovieGenres = [\n  {\n    id: 28,\n    name: \"Action\"\n  },\n  {\n    id: 12,\n    name: \"Adventure\"\n  },\n  {\n    id: 16,\n    name: \"Animation\"\n  },\n  {\n    id: 35,\n    name: \"Comedy\"\n  },\n  {\n    id: 80,\n    name: \"Crime\"\n  },\n  {\n    id: 99,\n    name: \"Documentary\"\n  },\n  {\n    id: 18,\n    name: \"Drama\"\n  },\n  {\n    id: 10751,\n    name: \"Family\"\n  },\n  {\n    id: 14,\n    name: \"Fantasy\"\n  },\n  {\n    id: 36,\n    name: \"History\"\n  },\n  {\n    id: 27,\n    name: \"Horror\"\n  },\n  {\n    id: 10402,\n    name: \"Music\"\n  },\n  {\n    id: 9648,\n    name: \"Mystery\"\n  },\n  {\n    id: 10749,\n    name: \"Romance\"\n  },\n  {\n    id: 878,\n    name: \"Science Fiction\"\n  },\n  {\n    id: 10770,\n    name: \"TV Movie\"\n  },\n  {\n    id: 53,\n    name: \"Thriller\"\n  },\n  {\n    id: 10752,\n    name: \"War\"\n  },\n  {\n    id: 37,\n    name: \"Western\"\n  }\n];\n","import React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"./Slider.scss\";\nimport noImage from \"../../assets/no-image.jpg\"\n\nimport {getRandomInt} from '../../api/api'\n\nfunction ResultSlider({ stateList, stateGenre, stateYear }) {\n  const [state] = useState(getRandomInt(stateList.length))\n\n  const settings = {\n    arrows: false,\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 4,\n    initialSlide: 0,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"recomended\">\n        <div className=\"description-wrapper\">\n          <div className=\"description\">\n            <img\n              src={\n                stateList[state].poster_path\n                  ? `https://image.tmdb.org/t/p/w200${stateList[state].poster_path}`\n                  : noImage\n              }\n              alt={stateList[state].title}\n              onError={e =>\n                (e.target.src = noImage)\n              }\n            />\n            <div className=\"text\">\n              <h2>\n                Recomended movie for you is from year\n                <span className=\"green-text\"> {stateYear}</span>, and Genre of\n                movie is <span className=\"green-text\">{stateGenre}</span>\n              </h2>\n              <h4>{stateList[state].title}</h4>\n              <p>{stateList[state].overview}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {stateList && (\n        <Slider {...settings}>\n          {stateList.map((item, key) => {\n            return (\n              <div key={key}>\n                <img\n                  src={\n                    item.poster_path\n                      ? `https://image.tmdb.org/t/p/w200${item.poster_path}`\n                      : noImage\n                  }\n                  onError={e =>\n                    (e.target.src = noImage)\n                  }\n                  alt={item.title}\n                />\n                <div className=\"title-in\">\n                  <div className=\"cate\">\n                    <span className=\"green\">\n                      <span className=\"title\">{stateGenre}</span>\n                    </span>\n                  </div>\n                  <h6 className=\"main-title\">{item.original_title}</h6>\n                  <p>\n                    <i className=\"ion-android-star\"></i>\n                    <span>{item.vote_average}</span> /10\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n        </Slider>\n      )}\n    </div>\n  );\n}\n\nexport default ResultSlider;\n","import React from 'react'\nimport './Header.scss'\n\nfunction Header({ getData }) {\n  return (\n    <header className=\"wrapper\">\n      <h2>\n        Hi, Due to the new situation <span className=\"green-text\">(COVID-19)</span>, the demand for\n        films is increasing, as is the hesitancy to choose them. We are here for\n        you to choose the best movie by randomly selecting the genre as the year\n        of release.\n      </h2>\n      <div>\n        <button onClick={() => getData()}>Choose Again</button>\n      </div>\n    </header>\n  );\n}\n\nexport default Header\n","import React from 'react'\nimport './Footer.scss'\n\nfunction Footer() {\n  return (\n    <footer>\n      <a href=\"https://rs.linkedin.com/in/attila-pravda\" target=\"_blank\">\n        Developed by Attila Pravda\n      </a>\n      <a href=\"https://developers.themoviedb.org/\" target=\"_blank\">\n        Api\n      </a>\n    </footer>\n  );\n}\n\nexport default Footer\n","import React, { useEffect, useState } from \"react\";\nimport './App.scss';\nimport { getListOfMovies, MovieGenres, getRandomInt } from \"./api/api\";\nimport ResultSlider from \"./components/Slider/Slider\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  const [stateList, setstateList] = useState(null)\n  const [stateGenre, setstateGenre] = useState(null)\n  const [stateYear, setstateYear] = useState(null)\n  const yearNum = 35;\n  \n\n  const getData = async () => {\n    let typeNo = getRandomInt(MovieGenres.length);\n    let yearNo = getRandomInt(yearNum);\n    setstateYear(2020 - yearNo);\n    setstateGenre(MovieGenres[typeNo].name);\n    getListOfMovies(MovieGenres[typeNo].id, 2020 - yearNo).then(res => {\n      setstateList(res);\n      console.log(res);\n    });\n  };\n\n  useEffect(() => {\n    getData()\n  }, []);\n  \n  return (\n    <>\n      <div className=\"slider-container\">\n        <Header getData={getData} />\n        {stateList && (\n          <ResultSlider\n            getData={getData}\n            stateList={stateList}\n            stateGenre={stateGenre}\n            stateYear={stateYear}\n          />\n        )}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}